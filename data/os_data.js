const OS_MCQS = {
  mcq1: [
    {
      id: "1",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "What is an operating system?",
      option_one: "collection of programs that manages hardware resources",
      option_two: "system service provider to the application programs",
      option_three: "interface between the hardware and application programs",
      option_four: " all of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq2: [
    {
      id: "2",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "To access the services of operating system, the interface is provided by the ___________",
      option_one: "System Calls",
      option_two: "API",
      option_three: "Library",
      option_four: "Assembly Instructions",
      answer: "A",
      explanation: "",
    },
  ],
  mcq3: [
    {
      id: "3",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "Which one of the following is not true?",
      option_one:
        "kernel is the program that constitutes the central core of the operating system",
      option_two:
        "kernel is the first part of operating system to load into memory during booting",
      option_three:
        " kernel is made of various modules which can not be loaded in running operating system",
      option_four:
        "kernel remains in the memory during the entire computer session",
      answer: "C",
      explanation:
        "Kernel modules can be loaded and unloaded in run-time i.e. in running OS.",
    },
  ],
  mcq4: [
    {
      id: "4",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Which one of the following error will be handle by the operating system?",
      option_one: "power failure",
      option_two: "lack of paper in printer",
      option_three: "connection failure in the network",
      option_four: "all of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq5: [
    {
      id: "5",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "What is the main function of the command interpreter?",
      option_one: "to get and execute the next user-specified command",
      option_two:
        "to provide the interface between the API and application program",
      option_three: "to handle the files in operating system",
      option_four: "none of the mentioned",
      answer: "A",
      explanation:
        "Command Interpreter checks for valid command and then runs that command else it will throw an error.",
    },
  ],
  mcq6: [
    {
      id: "6",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "In Operating Systems, which of the following is/are CPU scheduling algorithms?",
      option_one: "Round Robin",
      option_two: "Shortest Job First",
      option_three: "Priority",
      option_four: "All of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq7: [
    {
      id: "7",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "If a process fails, most operating system write the error information to a ______",
      option_one: "new file",
      option_two: "log file",
      option_three: "another running process",
      option_four: "none of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq8: [
    {
      id: "8",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Which facility dynamically adds probes to a running system, both in user processes and in the kernel?",
      option_one: "DTrace",
      option_two: "DLocate",
      option_three: "DMap",
      option_four: "DAdd",
      answer: "A",
      explanation:
        "DTrace is a comprehensive dynamic tracing framework developed by Sun Microsystems for troubleshooting kernel and application problems on production systems in real time. program to view debian package information",
    },
  ],
  mcq9: [
    {
      id: "9",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Which one of the following is not a real time operating system?",
      option_one: "VxWorks",
      option_two: "QNX",
      option_three: "RTLinux",
      option_four: "Palm OS",
      answer: "D",
      explanation:
        "Palm OS is a mobile operating system. Palm OS is developed for Personal Digital Assistants (PDAs).(Dimethylamino)pyridine (DMAP) is a toxic, corrosive solid. DAdd is imaginary word",
    },
  ],
  mcq10: [
    {
      id: "10",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "The OS X has ____________",
      option_one: "Monolithic kernal",
      option_two: "hybrid kernal",
      option_three: "microkernel",
      option_four: "monolithic kernel with module",
      answer: "B",
      explanation: "",
    },
  ],
  mcq11: [
    {
      id: "11",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "CPU scheduling is the basis of ___________",
      option_one: "Multi-programming operating systems",
      option_two: "Larger memory sized systems",
      option_three: "Multi-processing systems",
      option_four: "None of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq12: [
    {
      id: "12",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "Where is the operating system placed in the memory?",
      option_one:
        "either in low or high memory (depending on the location of interrupt vector)",
      option_two: "in the low memory",
      option_three: "in high memory",
      option_four: "none of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq13: [
    {
      id: "13",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: " In operating system, each process has its own",
      option_one: "open files",
      option_two: "pending alarms, signals and signal handlers",
      option_three: "address space and global variables",
      option_four: "all of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq14: [
    {
      id: "14",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "In a timeshare operating system, when the time slot assigned to a process is completed, the process switches from the current state to?",
      option_one: "Suspended state",
      option_two: "Terminated state",
      option_three: "Ready state",
      option_four: "Blocked state",
      answer: "C",
      explanation: "",
    },
  ],
  mcq15: [
    {
      id: "15",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Cascading termination refers to the termination of all child processes if the parent process terminates ______",
      option_one: "Normally or abnormally",
      option_two: "Abnormally",
      option_three: "Normally",
      option_four: "None of the mentioned",
      answer: "A",
      explanation:
        "Cascading termination refers to the termination of all child processes if the parent process terminates Normally or Abnormally. Some systems don’t allow child processes to exist if the parent process has terminated. Cascading termination is normally initiated by the operating system.",
    },
  ],
  mcq16: [
    {
      id: "16",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "When a process is in a “Blocked” state waiting for some I/O service. When the service is completed, it goes to then",
      option_one: "Terminated state",
      option_two: "Suspended state",
      option_three: "Running state",
      option_four: "Ready state",
      answer: "D",
      explanation: "",
    },
  ],
  mcq17: [
    {
      id: "17",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "Transient operating system code is a code that",
      option_one: "always stays in memory",
      option_two: "never enter in memory space",
      option_three: "comes and goes as needed",
      option_four: "is not easily accessible",
      answer: "C",
      explanation: "",
    },
  ],
  mcq18: [
    {
      id: "18",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The portion of the process scheduler in an operating system that dispatches processes is concerned with",
      option_one: "assigning ready processes to waiting queue",
      option_two: "assigning running processes to blocked queue",
      option_three: "assigning ready processes to CPU",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq19: [
    {
      id: "19",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The FCFS algorithm is particularly troublesome for ____________",
      option_one: "Operating sytem",
      option_two: "Multiprocessor systems",
      option_three: "Time sharing sytems",
      option_four: "Multiprogramming systems",
      answer: "C",
      explanation:
        "In a time sharing system, each user needs to get a share of the CPU at regular intervals.",
    },
  ],
  mcq20: [
    {
      id: "20",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "For an effective operating system, when to check for deadlock?",
      option_one:
        " every time a resource request is made and at fixed time interval",
      option_two: "at fixed time intervals",
      option_three: "every time a resource request is made",
      option_four: "none of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq21: [
    {
      id: "21",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "A deadlock avoidance algorithm dynamically examines the __________ to ensure that a circular wait condition can never exist.",
      option_one: "Operating sytem",
      option_two: "Resources ",
      option_three: "System storage state",
      option_four: "Resource allocation state",
      answer: "D",
      explanation: "",
    },
  ],
  mcq22: [
    {
      id: "22",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        " Swapping _______ be done when a process has pending I/O, or has to execute I/O operations only into operating system buffers.",
      option_one: "must never",
      option_two: "maybe",
      option_three: "can",
      option_four: "must",
      answer: "A",
      explanation: "",
    },
  ],
  mcq23: [
    {
      id: "23",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "The operating system is responsible for?",
      option_one: "Bad-block recovery",
      option_two: "Booting from disk",
      option_three: "Disk Initialization",
      option_four: "all of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq24: [
    {
      id: "24",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The operating system and the other processes are protected from being modified by an already running process because ____________",
      option_one:
        "every address generated by the CPU is being checked against the relocation and limit registers",
      option_two: "they have a protection algorithm",
      option_three: "they are in different memory spaces",
      option_four: " they are in different logical addresses",
      answer: "A",
      explanation: "",
    },
  ],
  mcq25: [
    {
      id: "25",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Using transient code, _______ the size of the operating system during program execution.",
      option_one: "maintains",
      option_two: "changes",
      option_three: "increases",
      option_four: "decreases",
      answer: "B",
      explanation: "",
    },
  ],
  mcq26: [
    {
      id: "26",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        " The operating system maintains a ______ table that keeps track of how many frames have been allocated, how many are there, and how many are available",
      option_one: "memory",
      option_two: "mapping",
      option_three: "page",
      option_four: "frame",
      answer: "D",
      explanation: "",
    },
  ],
  mcq27: [
    {
      id: "27",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "To obtain better memory utilization, dynamic loading is used. With dynamic loading, a routine is not loaded until it is called. For implementing dynamic loading ____________",
      option_one: "special support from operating system is essential",
      option_two: "special support from hardware is required",
      option_three:
        "user programs can implement dynamic loading without any special support from hardware or operating system",
      option_four:
        "special support from both hardware and operating system is essential",
      answer: "C",
      explanation: "",
    },
  ],
  mcq28: [
    {
      id: "28",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The _________ presents a uniform device-access interface to the I/O subsystem, much as system calls provide a standard interface between the application and the operating system.",
      option_one: "Device Drivers",
      option_two: "I/O Systems",
      option_three: "Devices",
      option_four: "Buses",
      answer: "A",
      explanation: "",
    },
  ],
  mcq29: [
    {
      id: "29",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "In real time operating system ____________",
      option_one: "process scheduling can be done only once",
      option_two: "all processes have the same priority",
      option_three: "kernel is not required",
      option_four: "a task must be serviced by its deadline period",
      answer: "D",
      explanation: "",
    },
  ],
  mcq30: [
    {
      id: "30",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Hard real time operating system has ______________ jitter than a soft real time",
      option_one: "equal",
      option_two: "more",
      option_three: "less",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq31: [
    {
      id: "31",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "For real time operating systems, interrupt latency should be ____________",
      option_one: "zero",
      option_two: "minimal",
      option_three: "maximum",
      option_four: "dependent on the scheduling",
      answer: "A",
      explanation: "",
    },
  ],
  mcq32: [
    {
      id: "32",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "Which one of the following is a real time operating system?",
      option_one: "Windows CE",
      option_two: "RTLinux",
      option_three: "VxWorks",
      option_four: "All of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq33: [
    {
      id: "33",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The priority of a process will ______________ if the scheduler assigns it a static priority.",
      option_one: "depends on the operating sytem",
      option_two: "change",
      option_three: "remain unchanged",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq34: [
    {
      id: "34",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "What are the characteristics of Host based IDS?",
      option_one: "Logs are analysed to detect tails of intrusion",
      option_two: "The host operating system logs in the audit information",
      option_three: "Logs includes logins, file opens, and program executions",
      option_four: "All of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq35: [
    {
      id: "35",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "What are the characteristics of stack based IDS?",
      option_one: "It is programmed to interpret a certain series of packets",
      option_two:
        "It models the normal usage of the network as a noise characterization",
      option_three:
        "They are integrated closely with the TCP/IP stack and watch packets",
      option_four: "The host operating system logs in the audit information",
      answer: "C",
      explanation: "",
    },
  ],
  mcq36: [
    {
      id: "36",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "If the sum of the working – set sizes increases, exceeding the total number of available frames ____________",
      option_one: "the operating system selects a process to suspend",
      option_two: "the system crashes",
      option_three: "then the process crashes",
      option_four: "the memory overflows",
      answer: "A",
      explanation: "",
    },
  ],
  mcq37: [
    {
      id: "37",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "The information about all files is kept in ____________",
      option_one: "operating system",
      option_two: "Seperate directory structure",
      option_three: "swap space",
      option_four: "none of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq38: [
    {
      id: "38",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The operating system keeps a small table containing information about all open files called ____________",
      option_one: "file table",
      option_two: "directory table",
      option_three: "open-file table",
      option_four: "system table",
      answer: "C",
      explanation: "",
    },
  ],
  mcq39: [
    {
      id: "39",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "What will happen in the single level directory?",
      option_one: "All files are contained in the same directory",
      option_two:
        "All files are contained in different directories all at the same level",
      option_three: "Depends on the operating system",
      option_four: "None of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq40: [
    {
      id: "40",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The operating system _______ the links when traversing directory trees, to preserve the acyclic structure of the system.",
      option_one: "Deletes",
      option_two: "Considers",
      option_three: "Ignores",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq41: [
    {
      id: "41",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        ". To recover from failures in the network operations _____________ information may be maintained.",
      option_one: "Operating system",
      option_two: "ip address",
      option_three: "stateless",
      option_four: "state",
      answer: "D",
      explanation: "",
    },
  ],
  mcq42: [
    {
      id: "42",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "When there are multiple operating systems in a computer, the decision to load a particular one is done by?",
      option_one: "process control block",
      option_two: "file control block",
      option_three: "boot loader",
      option_four: "bootstrap",
      answer: "C",
      explanation: "On computers where there are multiple operating systems, the decision to load a particular one is done by a boot loader",
    },
  ],
  mcq43: [
    {
      id: "43",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        " Whenever a process needs I/O, to or from a disk, it issues a ______________",
      option_one: "system call to the operating system",
      option_two: "a special procedure",
      option_three: "system call to the CPU",
      option_four: "all of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq44: [
    {
      id: "44",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "The two steps the operating system takes to use a disk to hold its files are _______ and ________",
      option_one: "caching & logical formatting",
      option_two: "logical formatting & swap space creation",
      option_three: "swap space creation & caching",
      option_four: "partitioning & logical formatting",
      answer: "D",
      explanation: "",
    },
  ],
  mcq45: [
    {
      id: "45",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        " The _______ program initializes all aspects of the system, from CPU registers to device controllers and the contents of main memory, and then starts the operating system.",
      option_one: "Bootstrap",
      option_two: "Main",
      option_three: "Bootloader",
      option_four: "Rom",
      answer: "A",
      explanation: "",
    },
  ],
  mcq46: [
    {
      id: "46",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "In SCSI disks used in high end PCs, the controller maintains a list of _________ on the disk. The disk is initialized during ________ formatting which sets aside spare sectors not visible to the operating system.",
      option_one: "destroyed blocks, partitioning",
      option_two: "bad blocks, low level formatting",
      option_three: "destroyed blocks, high level formatting",
      option_four: "bad blocks, partitioning",
      answer: "B",
      explanation: "",
    },
  ],
  mcq47: [
    {
      id: "47",
      subject_name: "OS",
      chapter_name: "Introduction",
      question:
        "Which principle states that programs, users, and even the systems be given just enough privileges to perform their task?",
      option_one: "principle of least privilege",
      option_two: " principle of process scheduling",
      option_three: "principle of operating system",
      option_four: "None of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq48: [
    {
      id: "48",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "Network operating system runs on ___________",
      option_one: "every system in the network",
      option_two: "server",
      option_three: "both server and every system in the network",
      option_four: "None of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq49: [
    {
      id: "49",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "What are the types of distributed operating systems?",
      option_one: "zone base OS",
      option_two: "level based os",
      option_three: "Network OS",
      option_four: "All of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq50: [
    {
      id: "50",
      subject_name: "OS",
      chapter_name: "Introduction",
      question: "In Unix, which system call creates the new process?",
      option_one: "create",
      option_two: "fork",
      option_three: "new",
      option_four: "None of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq51: [
    {
      id: "51",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "The systems which allow only one process execution at a time, are called __________",
      option_one: "uniprogramming systems",
      option_two: "uniprocessing systems",
      option_three: "unitasking systems",
      option_four: "none of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq52: [
    {
      id: "52",
      subject_name: "OS",
      chapter_name: "Process",
      question: "A process can be terminated due to __________",
      option_one: "Normal exit",
      option_two: "Fatal error",
      option_three: "Killed by another process",
      option_four: "All of the mentioned",
      answer: "D",
      explanation: "",
    },
  ],
  mcq53: [
    {
      id: "53",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is the ready state of a process?",
      option_one: "when process is scheduled to run after some execution",
      option_two:
        "when process is unable to run until some task has been completed",
      option_three: "when process is using the CPU",
      option_four: "none of the mentioned",
      answer: "A",
      explanation:
        "Ready state of the process means process has all necessary resources which are required for execution of that process when CPU is allocated. Process is ready for execution but waiting for the CPU to be allocated.",
    },
  ],
  mcq54: [
    {
      id: "54",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is interprocess communication?",
      option_one: "communication within the process",
      option_two: "communication  between two process",
      option_three: "communication between two threads of same process",
      option_four: "none of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq55: [
    {
      id: "55",
      subject_name: "OS",
      chapter_name: "Process",
      question: "A set of processes is in deadlock state if __________",
      option_one: "each process is blocked and will remain so forever",
      option_two: "each process is terminated",
      option_three: "all processes are trying to kill each other",
      option_four: "none of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq56: [
    {
      id: "56",
      subject_name: "OS",
      chapter_name: "Process",
      question: "A process stack does not contain __________",
      option_one: "Function parameters",
      option_two: "PID of child process",
      option_three: "Local variables",
      option_four: "Return addresses",
      answer: "B",
      explanation: "Process stack contains Function parameters, Local variables and Return address. It does not contain the PID of child process",
    },
  ],
  mcq57: [
    {
      id: "57",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "Which system call can be used by a parent process to determine the termination of child process?",
      option_one: "wait",
      option_two: "exit",
      option_three: "fork",
      option_four: "get",
      answer: "A",
      explanation:
        "wait() system call is used by the parent process to determine termination of child process. The parent process uses wait() system call and gets the exit status of the child process as well as the pid of the child process which is terminated.",
    },
  ],
  mcq58: [
    {
      id: "58",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        " The address of the next instruction to be executed by the current process is provided by the _______",
      option_one: "CPU registers",
      option_two: "Program counter",
      option_three: "Process stack",
      option_four: "Pipe",
      answer: "B",
      explanation:
        "The address of the next instruction to be executed by the current process is provided by the Program Counter. After every instruction is executed, the Program Counter is incremented by 1 i.e. address of the next instruction to be executed. CPU fetches instruction from the address denoted by Program Counter and execute it.",
    },
  ],
  mcq59: [
    {
      id: "59",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        " A Process Control Block(PCB) does not contain which of the following?",
      option_one: "Code",
      option_two: "stack",
      option_three: "Bootstrap Program",
      option_four: "Data",
      answer: "C",
      explanation:
        "Bootstrap program is a program which runs initially when the system or computer is booted or rebooted.",
    },
  ],
  mcq60: [
    {
      id: "60",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "The number of processes completed per unit time is known as __________",
      option_one: "Output",
      option_two: "Throughtput",
      option_three: "Efficiency",
      option_four: "Capacity",
      answer: "B",
      explanation:
        "The number of processes completed per unit time is known as Throughput. Suppose there are 4 processes A, B, C & D they are taking 1, 3, 4 & 7 units of time respectively for their executions. For 10 units of time, throughput is high if process A, B & C are running first as 3 processes can execute. If process C runs first then throughput is low as maximum only 2 processes can execute. Throughput is low for processes which take a long time for execution. Throughput is high for processes which take a short time for execution.",
    },
  ],
  mcq61: [
    {
      id: "61",
      subject_name: "OS",
      chapter_name: "Process",
      question: "The state of a process is defined by",
      option_one: "the final activity of the process",
      option_two: "the activity just executed by the process",
      option_three: "the activity which will be exectued next by the process",
      option_four: "the current activty of the process",
      answer: "D",
      explanation:
        "The state of a process is defined by the current activity of the process. A process state changes when the process executes. The process states are as New, Ready, Running, Wait, Terminated",
    },
  ],
  mcq62: [
    {
      id: "62",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Which of the following is not the state of a process?",
      option_one: "New",
      option_two: "Old",
      option_three: "waiting",
      option_four: "running",
      answer: "B",
      explanation:
        "There is no process state such as old. When a process is created then the process is in New state. When the process gets the CPU for its execution then the process is in Running state. When the process is waiting for an external event then the process is in a Waiting state.",
    },
  ],
  mcq63: [
    {
      id: "63",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is a Process Control Block?",
      option_one: "Process type variable",
      option_two: "Data Structure",
      option_three: "A secondary storage section",
      option_four: "A Block in memory",
      answer: "B",
      explanation:
        "A Process Control Block (PCB) is a data structure. It contains information related to a process such as Process State, Program Counter, CPU Register, etc. Process Control Block is also known as Task Control Block.",
    },
  ],
  mcq64: [
    {
      id: "64",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "The entry of all the PCBs of the current processes is in __________",
      option_one: "Process Register",
      option_two: "Program Counter",
      option_three: "Process Table",
      option_four: "Process Unit",
      answer: "C",
      explanation: "",
    },
  ],
  mcq65: [
    {
      id: "65",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is the degree of multiprogramming?",
      option_one: "the number of processes executed per unit time",
      option_two: " the number of processes in the ready queue",
      option_three: "the number of processes in the I/O queue",
      option_four: "the number of processes in memory",
      answer: "D",
      explanation:
        "Multiprogramming means the number of processes are in the ready states. To increase utilization of CPU, Multiprogramming is one of the most important abilities of OS. Generally, a single process cannot use CPU or I/O at all time, whenever CPU or I/O is available another process can use it. By doing this CPU utilization is increased.",
    },
  ],
  mcq66: [
    {
      id: "66",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "A single thread of control allows the process to perform __________",
      option_one: "only one task at a time",
      option_two: "multiple tasks at a time",
      option_three: "only two tasks at a time",
      option_four: "all of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq67: [
    {
      id: "67",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is the objective of multiprogramming?",
      option_one: "Have a process running at all time",
      option_two: "Have multiple programs waiting in a queue ready to run",
      option_three: "To increase CPU utilization",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq68: [
    {
      id: "68",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Which of the following do not belong to queues for processes?",
      option_one: "Job Queue",
      option_two: "PCB queue",
      option_three: "Device queue",
      option_four: "Ready Queue",
      answer: "B",
      explanation:
        "PCB queue does not belong to queues for processes. PCB is a process control block which contains information related to process. Each process is represented by PCB.",
    },
  ],
  mcq69: [
    {
      id: "69",
      subject_name: "OS",
      chapter_name: "Process",
      question: "When the process issues an I/O request __________",
      option_one: "It is placed in an I/O queue",
      option_two: "It is placed in an waiting queue",
      option_three: "It is placed in an ready queue",
      option_four: "It is placed in an job queue",
      answer: "A",
      explanation: "",
    },
  ],
  mcq70: [
    {
      id: "70",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What will happen when a process terminates?",
      option_one: "It is removed from all queues",
      option_two: "It is removed from all, but the job queue",
      option_three: "Its process control block is de-allocated",
      option_four: "Its process control block is never de-allocated",
      answer: "A",
      explanation: "",
    },
  ],
  mcq71: [
    {
      id: "71",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is a long-term scheduler?",
      option_one:
        "It selects processes which have to be brought into the ready queue",
      option_two:
        " It selects processes which have to be executed next and allocates CPU",
      option_three:
        "It selects processes which needs to  be removed from memory by swapping",
      option_four: "None of the mentioned",
      answer: "A",
      explanation:
        "A long-term scheduler selects processes which have to be brought into the ready queue. When processes enter the system, they are put in the job queue. Long-term scheduler selects processes from the job queue and puts them in the ready queue. It is also known as Job Scheduler",
    },
  ],
  mcq72: [
    {
      id: "72",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "If all processes I/O bound, the ready queue will almost always be ______ and the Short term Scheduler will have a ______ to do.",
      option_one: "full, little",
      option_two: "full, lot",
      option_three: "empty, little",
      option_four: "empty, lot",
      answer: "C",
      explanation:
        "If all processes are I/O bound, the ready queue will almost empty and the short-term scheduler will have a little to do. I/O bound processes spend more time doing I/O than computation.",
    },
  ],
  mcq73: [
    {
      id: "73",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is a medium-term scheduler?",
      option_one:
        "It selects which process has to be brought into the ready queue",
      option_two:
        "It selects which process has to be executed next and allocates CPU",
      option_three:
        "It selects which process to remove from memory by swapping",
      option_four: "None of the mentioned",
      answer: "C",
      explanation:
        "A medium-term scheduler selects which process to remove from memory by swapping. The medium-term scheduler swapped out the process and later swapped in. Swapping helps to free up memory.",
    },
  ],
  mcq74: [
    {
      id: "74",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is a short-term scheduler?",
      option_one:
        "It selects which process has to be brought into the ready queue",
      option_two:
        " It selects which process has to be executed next and allocates CPU",
      option_three:
        " It selects which process to remove from memory by swapping",
      option_four: "None of the mentioned",
      answer: "B",
      explanation:
        " Short-term scheduler selects a process from the ready queue.",
    },
  ],
  mcq75: [
    {
      id: "75",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "The primary distinction between the short term scheduler and the long term scheduler is __________",
      option_one: "The length of their queues",
      option_two: "The type of processes they schedule",
      option_three: "The frequency of their execution",
      option_four: "None of the mentioned",
      answer: "C",
      explanation:
        "The short-term scheduler executes frequently while the long-term scheduler executes much less frequently.",
    },
  ],
  mcq76: [
    {
      id: "76",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        " The only state transition that is initiated by the user process itself is __________",
      option_one: "Block",
      option_two: "Wakeup",
      option_three: "Dispatch",
      option_four: "None of the mentioned",
      answer: "A",
      explanation:
        "The only state transition that is initiated by the user process itself is block. Whenever a user process initiates an I/O request it goes into block state unless and until the I/O request is not completed.",
    },
  ],
  mcq77: [
    {
      id: "77",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Which of the following does not interrupt a running process?",
      option_one: " A device",
      option_two: "Timer",
      option_three: "Scheduler Process",
      option_four: "Power failure",
      answer: "C",
      explanation:
        "Scheduler process does not interrupt a running process. Scheduler process selects an available process from a pool of available processes and allocates CPU to it.",
    },
  ],
  mcq78: [
    {
      id: "78",
      subject_name: "OS",
      chapter_name: "Process",
      question: "In a multiprogramming environment __________",
      option_one: "the processor executes more than one process at a time",
      option_two: "the programs are developed by more than one person",
      option_three: "more than one process resides in the memory",
      option_four: " a single user can execute many programs at the same time",
      answer: "C",
      explanation:
        "In a multiprogramming environment more than one process resides in the memory. Whenever a CPU is available, one process amongst all present in memory gets the CPU for execution. Multiprogramming increases CPU utilization.",
    },
  ],
  mcq79: [
    {
      id: "79",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        " The context of a process in the PCB of a process does not contain __________",
      option_one: "the value of the CPU registers",
      option_two: "the process state",
      option_three: "memory-management information",
      option_four: "context switch time",
      answer: "D",
      explanation: "",
    },
  ],
  mcq80: [
    {
      id: "80",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "Which of the following need not necessarily be saved on a context switch between processes?",
      option_one: "General purpose registers",
      option_two: "Translation lookaside buffer",
      option_three: "Program counter",
      option_four: "All of the mentioned",
      answer: "B",
      explanation:
        "Translation Look-aside Buffer (TLB) need not necessarily be saved on a context switch between processes. A special, small, fast-lookup hardware cache is called Translation Look-aside Buffer. TLB used to reduce memory access time.",
    },
  ],
  mcq81: [
    {
      id: "81",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "Which process can be affected by other processes executing in the system?",
      option_one: "cooperating process",
      option_two: "child process",
      option_three: "parent process",
      option_four: "init process",
      answer: "A",
      explanation:
        " A process shares data with other processes, such a process is known as a cooperating process.",
    },
  ],
  mcq82: [
    {
      id: "82",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "When several processes access the same data concurrently and the outcome of the execution depends on the particular order in which the access takes place is called ________",
      option_one: "dynamic condition",
      option_two: "race condition",
      option_three: "essential condition",
      option_four: "critical condition",
      answer: "B",
      explanation: "B",
    },
  ],
  mcq83: [
    {
      id: "83",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "If a process is executing in its critical section, then no other processes can be executing in their critical section. What is this condition called?",
      option_one: "mutual exclusion",
      option_two: "critical exclusion",
      option_three: "synchronous exclusion",
      option_four: "asynchronous exclusion",
      answer: "A",
      explanation: "",
    },
  ],
  mcq84: [
    {
      id: "84",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Which one of the following is a synchronization tool?",
      option_one: "thread",
      option_two: "pipe",
      option_three: "semaphore",
      option_four: "socket",
      answer: "C",
      explanation:
        "Semaphore is a synchronization tool. Semaphore is a mechanism which synchronizes or controls access of threads on critical resources. There are two types of semaphores i) Binary Semaphore ii) Counting Semaphore.",
    },
  ],
  mcq85: [
    {
      id: "85",
      subject_name: "OS",
      chapter_name: "Process",
      question: "A semaphore is a shared integer variable __________ ",
      option_one: "that can not drop below zero",
      option_two: "that can not be more than zero",
      option_three: "that can not drop below one",
      option_four: "that can not be more than one",
      answer: "A",
      explanation:
        "A semaphore is a shared integer variable that can not drop below zero. In binary semaphore, if the value of the semaphore variable is zero that means there is a process that uses a critical resource and no other process can access the same critical resource until it is released. In Counting semaphore, if the value of the semaphore variable is zero that means there is no resource available.",
    },
  ],
  mcq86: [
    {
      id: "86",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Mutual exclusion can be provided by the __________",
      option_one: "mutex locks",
      option_two: "binary semaphores",
      option_three: "both mutex locks and binary semaphores",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq87: [
    {
      id: "87",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "When high priority task is indirectly preempted by medium priority task effectively inverting the relative priority of the two tasks, the scenario is called __________",
      option_one: "priority inversion",
      option_two: "priority removal",
      option_three: "priority exchange",
      option_four: "priority modification",
      answer: "A",
      explanation:
        "When a high priority task is indirectly preempted by a medium priority task effectively inverting the relative priority of the two tasks, the scenario is called priority inversion.",
    },
  ],
  mcq88: [
    {
      id: "88",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Process synchronization can be done on __________",
      option_one: "hardware level",
      option_two: "software level",
      option_three: "both hardware and software level",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq89: [
    {
      id: "89",
      subject_name: "OS",
      chapter_name: "Process",
      question: "A monitor is a module that encapsulates __________",
      option_one: "shared data structures",
      option_two: "procedures that operate on shared data structure",
      option_three: "synchronization between concurrent procedure invocation",
      option_four: "All of the mentioned",
      answer: "D",
      explanation:
        "Monitors are a programming language component that aids in the regulation of shared data access. The Monitor is a package that contains shared data structures, operations, and synchronization between concurrent procedure calls. Therefore, a monitor is also known as a synchronization tool.",
    },
  ],
  mcq90: [
    {
      id: "90",
      subject_name: "OS",
      chapter_name: "Process",
      question: "To enable a process to wait within the monitor __________",
      option_one: "a condition variable must be declared as condition",
      option_two: "condition variables must be used as boolean objects",
      option_three: "semaphore must be used",
      option_four: "all of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq91: [
    {
      id: "91",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "Restricting the child process to a subset of the parent’s resources prevents any process from __________",
      option_one: "overloading the system by using a lot of secondary storage",
      option_two: "under-loading the system by very less CPU utilization",
      option_three: "overloading the system by creating a lot of sub-processes",
      option_four: "crashing the system by utilizing multiple resources",
      answer: "C",
      explanation:
        "Restricting the child process to a subset of the parent’s resources prevents any process from overloading the system by creating a lot of sub-processes. A process creates a child process, child process requires certain resources to complete its task. A child process can demand required resources directly from the system, but by doing this system will be overloaded. So to avoid overloading of the system, the parent process shares its resources among children.",
    },
  ],
  mcq92: [
    {
      id: "92",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "A parent process calling _____ system call will be suspended until children processes terminate.",
      option_one: "wait",
      option_two: "fork",
      option_three: "exit",
      option_four: "exec",
      answer: "A",
      explanation: "",
    },
  ],
  mcq93: [
    {
      id: "93",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        " With _____________ only one process can execute at a time; meanwhile all other process are waiting for the processor. With ______________ more than one process can be running simultaneously each on a different processor.",
      option_one: "Multiprocessing, Multiprogramming",
      option_two: "Multiprogramming, Uniprocessing",
      option_three: "Multiprogramming, Multiprocessing",
      option_four: "Uniprogramming, Multiprocessing",
      answer: "D",
      explanation: "",
    },
  ],
  mcq94: [
    {
      id: "94",
      subject_name: "OS",
      chapter_name: "Process",
      question: "In UNIX, each process is identified by its __________",
      option_one: "Process Control Block",
      option_two: "Device Queue",
      option_three: "Process Identifier",
      option_four: "None of the mentioned",
      answer: "C",
      explanation: "",
    },
  ],
  mcq95: [
    {
      id: "95",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "In UNIX, the return value for the fork system call is _____ for the child process and _____ for the parent process.",
      option_one: "A Negative integer, Zero",
      option_two: "Zero, A Negative integer",
      option_three: "Zero, A non-zero integer",
      option_four: "A non-zero integer, Zero",
      answer: "C",
      explanation:
        " A fork system call returns the PID of a newly created (child) process to the parent and returns Zero to that newly created (child) process.",
    },
  ],
  mcq96: [
    {
      id: "96",
      subject_name: "OS",
      chapter_name: "Process",
      question: "The child process can __________",
      option_one: "be a duplicate of the parent process ",
      option_two: "never be a duplicate of the parent process",
      option_three: "cannot have another program loaded into it",
      option_four: "never have another program loaded into it",
      answer: "A",
      explanation: "",
    },
  ],
  mcq97: [
    {
      id: "97",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        " The child process completes execution, but the parent keeps executing, then the child process is known as __________",
      option_one: "Orphan",
      option_two: "Zombie",
      option_three: "Body",
      option_four: "Dead",
      answer: "B",
      explanation:
        " The child process completes execution, but the parent keeps executing, then the child process is known as Zombie. When a child process terminates, its resources get deallocated but its entry in the Process Control Block (PCB) remains there until its parent calls wait system call.",
    },
  ],
  mcq98: [
    {
      id: "98",
      subject_name: "OS",
      chapter_name: "Process",
      question: "What is Interprocess communication?",
      option_one:
        "allows processes to communicate and synchronize their actions when using the same address space",
      option_two:
        "allows processes to communicate and synchronize their actions",
      option_three:
        "allows the processes to only synchronize their actions without communication",
      option_four: "none of the mentioned",
      answer: "B",
      explanation:
        "Interprocess Communication allows processes to communicate and synchronize their actions. Interprocess Communication (IPC) mechanism is used by cooperating processes to exchange data and information.<ol>There are two models of IPC</ol><li>Shared Memory <li>Message Passing",
    },
  ],
  mcq99: [
    {
      id: "99",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Message passing system allows processes to __________",
      option_one:
        "communicate with each other without sharing the same address space",
      option_two: "communicate with one another by resorting to shared data",
      option_three: "share data",
      option_four: "name the recipient or sender of the message",
      answer: "A",
      explanation: "",
    },
  ],
  mcq100: [
    {
      id: "100",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "Which of the following two operations are provided by the IPC facility?",
      option_one: "write and delete message",
      option_two: "delete and receive message",
      option_three: "send and delete message",
      option_four: "receive and send message",
      answer: "D",
      explanation: "",
    },
  ],
  mcq101: [
    {
      id: "101",
      subject_name: "OS",
      chapter_name: "Process",
      question: "Messages sent by a process __________",
      option_one: "have to be a fixed size",
      option_two: "have to be a variable size",
      option_three: "can be fixed or variable sized",
      option_four: "None of the mentioned",
      answer: "C",
      explanation:
        "Messages sent by a process can be fixed or variable size. If the message size of the process is fixed then system level implementation is straightforward but it makes the task of programming more difficult. If the message size of the process is variable then system level implementation is more complex but it makes the task of programming simpler.",
    },
  ],
  mcq102: [
    {
      id: "102",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "The link between two processes P and Q to send and receive messages is called __________",
      option_one: "communication link",
      option_two: "message passing link",
      option_three: "synchronization link",
      option_four: "All of the mentioned",
      answer: "A",
      explanation: "The link between two processes P and Q to send and receive messages is called communication link.",
    },
  ],
  mcq103: [
    {
      id: "103",
      subject_name: "OS",
      chapter_name: "Process",
      question: " Which of the following are TRUE for direct communication?",
      option_one:
        "A communication link can be associated with N number of process(N = max. number of processes supported by system)",
      option_two:
        "A communication link is associated with exactly two processes",
      option_three:
        "Exactly N/2 links exist between each pair of processes(N = max. number of processes supported by system)",
      option_four: "Exactly two link exists between each pair of processes",
      answer: "B",
      explanation:
        "For direct communication, a communication link is associated with exactly two processes. One communication link must exist between a pair of processes.",
    },
  ],
  mcq104: [
    {
      id: "104",
      subject_name: "OS",
      chapter_name: "Process",
      question: "In indirect communication between processes P and Q",
      option_one:
        "there is another process R to handle and pass on the messages between P and Q",
      option_two:
        "there is another machine between the two processes to help communication",
      option_three: "there is a mailbox to help communication between P and Q",
      option_four: "none of the mentioned",
      answer: "C",
      explanation:
        "In indirect communication between processes P and Q there is a mailbox to help communication between P and Q. A mailbox can be viewed abstractly as an object into which messages can be placed by processes and from which messages can be removed",
    },
  ],
  mcq105: [
    {
      id: "105",
      subject_name: "OS",
      chapter_name: "Process",
      question: "In the non blocking send __________",
      option_one:
        "the sending process keeps sending until the message is received",
      option_two: "the sending process sends the message and resumes operation",
      option_three:
        "the sending process keeps sending until it receives a message",
      option_four: "none of the mentioned",
      answer: "B",
      explanation:
        "In the non blocking send, the sending process sends the message and resumes operation. Sending process doesn’t care about reception. It is also known as asynchronous send.",
    },
  ],
  mcq106: [
    {
      id: "106",
      subject_name: "OS",
      chapter_name: "Process",
      question: "In the Zero capacity queue __________",
      option_one: "the queue can store at least one message",
      option_two: "the sender blocks until the receiver receives the message",
      option_three:
        "the sender keeps sending and the messages don’t wait in the queue",
      option_four: "None of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq107: [
    {
      id: "107",
      subject_name: "OS",
      chapter_name: "Process",
      question: "The Zero Capacity queue __________",
      option_one: " is referred to as a message system with buffering",
      option_two: "is referred to as a message system with no buffering",
      option_three: "is referred to as a link",
      option_four: "None of the mentioned",
      answer: "B",
      explanation: "",
    },
  ],
  mcq108: [
    {
      id: "108",
      subject_name: "OS",
      chapter_name: "Process",
      question:
        "Bounded capacity and Unbounded capacity queues are referred to as __________",
      option_one: "Programmed buffering",
      option_two: "Automatic buffering",
      option_three: "User defined buffering",
      option_four: "No buffering",
      answer: "B",
      explanation:
        "Bounded capacity and Unbounded capacity queues are referred to as Automatic buffering. Buffer capacity of the Bounded capacity queue is finite length and buffer capacity of the Unbounded queue is infinite",
    },
  ],
  mcq109: [{
     id: '109',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'Remote Procedure Calls are used ____________',
  option_one: 'for communication between two processes remotely different from each other on the same system',
  option_two: 'for communication between two processes on the same system',
  option_three: 'for communication between two processes on separate systems',
  option_four: 'None of the mentioned',
  answer: 'C',
  explanation: ''
  },],
  mcq110: [{
     id: '110',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'To differentiate the many network servies, a system supports ________ are',
  option_one: 'Variables',
  option_two: 'Sockets',
  option_three: 'Ports',
  option_four: 'Service names',
  answer: 'C',
  explanation: ''
  },],
  mcq111: [{
     id: '111',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'RPC provides a(an) _____ on the client-side, a separate one for each remote procedure.',
  option_one: 'stub',
  option_two: 'identified',
  option_three: 'name',
  option_four: 'process identifier',
  answer: 'A',
  explanation: ''
  },],
  mcq112: [{
     id: '112',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'What is stub',
  option_one: 'transmits the message to the server where the server side stub receives the message and invokes procedure on the server side',
  option_two: 'packs the parameters into a form transmittable over the network',
  option_three: 'locates the port on the server',
  option_four: 'all of the mentioned',
  answer: 'D',
  explanation: ''
  },],
  mcq113: [{
     id: '113',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'To resolve the problem of data representation on different systems RPCs define _____________',
  option_one: 'machine dependent representation of data',
  option_two: 'machine representation of data',
  option_three: 'machine-independent representation of data',
  option_four: 'None of the mentioned',
  answer: 'C',
  explanation: ''
  },],
  mcq114: [{
     id: '114',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'What is the full form of RMI?',
  option_one: 'Remote Memory installation',
  option_two: 'Remote Memory Invocation',
  option_three: 'Remote Method Installation',
  option_four: 'Remote Method Invocation',
  answer: 'D',
  explanation: ''
  },],
  mcq115: [{
     id: '115',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'The remote method invocation __________',
  option_one: 'allows a process to invoke memory on a remote object',
  option_two: 'allows a thread to invoke a method on a remote object',
  option_three: 'allows a thread to invoke memory on a remote object',
  option_four: 'allows a process to invoke a method on a remote object',
  answer: 'B',
  explanation: ''
  },],
  mcq116: [{
     id: '116',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'A process that is based on IPC mechanism which executes on different systems and can communicate with other processes using message based communication, is called ________',
  option_one: 'Local Procedure call',
  option_two: 'Inter process communication',
  option_three: 'Remote procedure call',
  option_four: 'Remote Machine invocation',
  answer: 'C',
  explanation: ''
  },],
  mcq117: [{
     id: '117',
  subject_name: 'OS',
  chapter_name: 'Distributed Communication',
  question: 'The initial program that is run when the computer is powered up is called __________',
  option_one: 'boot program',
  option_two: 'bootloader',
  option_three: 'intializer',
  option_four: 'bootstrap program',
  answer: 'D',
  explanation: ''
  },],
  mcq118: [{
    id: '118',
 subject_name: 'OS',
 chapter_name: 'Distributed Communication',
 question: 'How does the software trigger an interrupt?',
 option_one: 'Sending signals to CPU through bus',
 option_two: 'Executing a special operation called system call',
 option_three: 'Executing a special program called system program',
 option_four: 'Executing a special program called interrupt trigger program',
 answer: 'B',
 explanation: ''
 },],
 mcq119: [{
  id: '119',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'What is a trap/exception?',
option_one: 'hardware generated interrupt caused by an error',
option_two: ' software generated interrupt caused by an error',
option_three: 'user generated interrupt caused by an error',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq120: [{
  id: '120',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'What is an ISR?',
option_one: 'Information Service Request',
option_two: 'Interrupt Service Request',
option_three: 'Interrupt Service Routine',
option_four: 'Information Service Routine',
answer: 'C',
explanation: ''
},],
mcq121: [{
  id: '121',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'What is an interrupt vector?',
option_one: 'It is an address that is indexed to an interrupt handler',
option_two: 'It is a unique device number that is indexed by an address',
option_three: 'It is a unique identity given to an interrupt',
option_four: 'None of the mentioned',
answer: 'A',
explanation: ''
},],
mcq122: [{
  id: '122',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'DMA is used for __________',
option_one: 'High speed devices(disks and communications network)',
option_two: 'Low speed devices',
option_three: 'Utilizing CPU cycles',
option_four: 'All of the mentioned',
answer: 'A',
explanation: ''
},],
mcq123: [{
  id: '123',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'In a memory mapped input/output __________',
option_one: ' the CPU uses polling to watch the control bit constantly, looping to see if a device is ready',
option_two: 'the CPU writes one data byte to the data register and sets a bit in control register to show that a byte is available',
option_three: 'the CPU receives an interrupt when the device is ready for the next byte',
option_four: 'the CPU runs a user written code and does accordingly',
answer: 'B',
explanation: ''
},],
mcq124: [{
  id: '124',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'In a programmed input/output(PIO) __________',
option_one: 'the CPU uses polling to watch the control bit constantly, looping to see if a device is ready',
option_two: 'the CPU writes one data byte to the data register and sets a bit in control register to show that a byte is available',
option_three: 'the CPU receives an interrupt when the device is ready for the next byte',
option_four: ' the CPU runs a user written code and does accordingly',
answer: 'A',
explanation: ''
},],
mcq125: [{
  id: '125',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'In an interrupt driven input/output __________',
option_one: 'the CPU uses polling to watch the control bit constantly, looping to see if a device is ready_A',
option_two: 'the CPU writes one data byte to the data register and sets a bit in control register to show that a byte is available',
option_three: 'the CPU receives an interrupt when the device is ready for the next byte',
option_four: ' the CPU runs a user written code and does accordingly',
answer: 'C',
explanation: ''
},],
mcq126: [{
  id: '126',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: ' In the layered approach of Operating Systems __________',
option_one: 'Bottom Layer(0) is the User interface',
option_two: 'Highest Layer(N) is the User interface',
option_three: 'Bottom Layer(N) is the hardware',
option_four: 'Highest Layer(N) is the hardware',
answer: 'B',
explanation: ''
},],
mcq127: [{
  id: '127',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'How does the Hardware trigger an interrupt?ion',
option_one: 'Sending signals to CPU through a system bus',
option_two: 'Executing a special program called interrupt program',
option_three: 'Executing a special program called system program',
option_four: 'Executing a special operation called system call',
answer: 'A',
explanation: ''
},],
mcq128: [{
  id: '128',
subject_name: 'OS',
chapter_name: 'Distributed Communication',
question: 'Which operation is performed by an interrupt handler?',
option_one: 'Saving the current state of the system',
option_two: 'Loading the interrupt handling code and executing it',
option_three: 'Once done handling, bringing back the system to the original state it was before the interrupt occurred',
option_four: 'All of the mentioned',
answer: 'D',
explanation: ''
},],
  

  mcq129: [
    {
      id: "129",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question:
        "Which module gives control of the CPU to the process selected by the short-term scheduler?",
      option_one: "dispatcher",
      option_two: "interrupt",
      option_three: "scheduler",
      option_four: "none of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],

  mcq130: [
    {
      id: "130",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question:
        "The processes that are residing in main memory and are ready and waiting to execute are kept on a list called _____________",
      option_one: "job queue",
      option_two: "ready queue",
      option_three: "execution queue",
      option_four: "process queue",
      answer: "B",
      explanation: "",
    },
  ],

  mcq131: [
    {
      id: "131",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question:
        "The interval from the time of submission of a process to the time of completion is termed as ____________",
      option_one: "waiting time",
      option_two: "turnaround time",
      option_three: "response time",
      option_four: "throughput",
      answer: "B",
      explanation: "",
    },
  ],

  mcq132: [
    {
      id: "132",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question:
        "Which scheduling algorithm allocates the CPU first to the process that requests the CPU first?",
      option_one: "first-come, first-served scheduling",
      option_two: "shortest job scheduling",
      option_three: "priority scheduling",
      option_four: "none of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq133: [
    {
      id: "133",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question: " In priority scheduling algorithm ____________",
      option_one: "CPU is allocated to the process with highest priority",
      option_two: "CPU is allocated to the process with lowest priority",
      option_three: "Equal priority processes can not be scheduled",
      option_four: "None of the mentioned",
      answer: "A",
      explanation: "",
    },
  ],
  mcq134: [
    {
      id: "134",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question:
        "In priority scheduling algorithm, when a process arrives at the ready queue, its priority is compared with the priority of ____________",
      option_one: "currently running process",
      option_two: "parent process",
      option_three: "init process",
      option_four: "all process",
      answer: "A",
      explanation: "",
    },
  ],
  mcq135: [
    {
      id: "135",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question: "Which algorithm is defined in Time quantum?",
      option_one: "shortest job scheduling algorithm",
      option_two: "round robin scheduling algorithm",
      option_three: "priority scheduling algorithm",
      option_four: "multilevel queue scheduling algorithm",
      answer: "B",
      explanation: "",
    },
  ],
  mcq136: [
    {
      id: "136",
      subject_name: "OS",
      chapter_name: "CPU Scheduling",
      question: "Process are classified into different groups in ____________",
      option_one: "shortest job scheduling algorithm",
      option_two: "round robin scheduling algorithm",
      option_three: "priority scheduling algorithm",
      option_four: "multilevel queue scheduling algorithm",
      answer: "D",
      explanation:
        "The process is classified into different groups in a multilevel queue scheduling algorithm. The multilevel queue scheduling algorithm is not an independent scheduling algorithm. It makes use of executing algorithms, such as the Round Robin algorithm, FCFS, and so on to group and schedule the jobs with common characteristics.",
    },
  ],

  mcq137: [{
     id: '137',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'In multilevel feedback scheduling algorithm ____________',
  option_one: 'a process can move to a different classified ready queue',
  option_two: 'classification of ready queue is permanent',
  option_three: 'processes are not classified into groups',
  option_four: 'none of the mentioned',
  answer: 'A',
  explanation: ''
  },],

  mcq138: [{
     id: '138',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Which one of the following can not be scheduled by the kernel?',
  option_one: 'kernel level thread',
  option_two: 'user level thread',
  option_three: 'process',
  option_four: 'none of the mentioned',
  answer: 'B',
  explanation: ''
  },],

  mcq139: [{
     id: '139',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'With multiprogramming ______ is used productively.',
  option_one: 'time',
  option_two: 'space',
  option_three: 'money',
  option_four: 'All of the mentioned',
  answer: 'A',
  explanation: ''
  },],
  mcq140: [{
     id: '140',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What are the two steps of a process execution?',
  option_one: 'I/o and OS Burst',
  option_two: 'CPU and I/O Burst',
  option_three: 'Memory and I/O Burst',
  option_four: 'OS & Memory Burst',
  answer: 'B',
  explanation: ''
  },],
  mcq141: [{
     id: '141',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'An I/O bound program will typically have ____________',
  option_one: 'a few very short CPU bursts',
  option_two: 'many very short I/O bursts',
  option_three: 'many very short CPU bursts',
  option_four: ' a few very short I/O bursts',
  answer: 'C',
  explanation: ''
  },],
  mcq142: [{
     id: '142',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'A process is selected from the ______ queue by the ________ scheduler, to be executed.',
  option_one: 'blocked, short term',
  option_two: 'wait, long term',
  option_three: 'ready, short term',
  option_four: 'ready, long term',
  answer: 'C',
  explanation: ''
  },],
  mcq143: [{
     id: '143',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: ' In the following cases non–preemptive scheduling occurs?',
  option_one: 'When a process switches from the running state to the ready state',
  option_two: 'When a process goes from the running state to the waiting state',
  option_three: 'When a process switches from the waiting state to the ready state',
  option_four: 'All of the mentioned',
  answer: 'B',
  explanation: ''
  },],
  mcq144: [{
     id: '144',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'The switching of the CPU from one process or thread to another is called ____________',
  option_one: 'process switch',
  option_two: ' task switch',
  option_three: 'context switch',
  option_four: 'all of the mentioned',
  answer: 'D',
  explanation: ''
  },],
  mcq145: [{
     id: '145',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What is Dispatch latency?',
  option_one: 'the speed of dispatching a process from running to the ready state',
  option_two: 'the time of dispatching a process from running to ready state and keeping the CPU idle',
  option_three: 'the time to stop one process and start running another one',
  option_four: 'none of the mentioned',
  answer: 'C',
  explanation: ''
  },],
  mcq146: [{
     id: '146',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Scheduling is done so as to ____________',
  option_one: 'increase CPU utilization',
  option_two: 'decrease CPU utilization',
  option_three: 'keep the CPU more idle',
  option_four: 'none of the mentioned',
  answer: 'A',
  explanation: ''
  },],

  mcq147: [{
     id: '147',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Scheduling is done so as to ____________',
  option_one: 'increase the throughput',
  option_two: 'decrease the throughput',
  option_three: 'increase the duration of a specific amount of work',
  option_four: 'none of the mentioned',
  answer: 'A',
  explanation: ''
  },],
  mcq148: [{
     id: '148',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What is Turnaround time?',
  option_one: 'the total waiting time for a process to finish execution',
  option_two: ' the total time spent in the ready queue',
  option_three: 'the total time spent in the running queue',
  option_four: 'the total time from the completion till the submission of a process',
  answer: 'D',
  explanation: ''
  },],
  mcq149: [{
     id: '149',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Scheduling is done so as to ____________',
  option_one: 'increase the turnaround time',
  option_two: 'decrease the turnaround time',
  option_three: 'keep the turnaround time same',
  option_four: 'there is no relation between scheduling and turnaround time',
  answer: 'B',
  explanation: ''
  },],
  mcq150: [{
     id: '150',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What is Waiting time?',
  option_one: 'the total time in the blocked and waiting queues',
  option_two: 'the total time spent in the ready queue',
  option_three: 'the total time spent in the running queue',
  option_four: 'the total time from the completion till the submission of a process',
  answer: 'B',
  explanation: ''
  },],
  mcq151: [{
     id: '151',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: ' Scheduling is done so as to ____________',
  option_one: 'increase the waiting time',
  option_two: 'keep the waiting time the same',
  option_three: 'decrease the waiting time',
  option_four: 'None of the mentioned',
  answer: 'C',
  explanation: ''
  },],
  mcq152: [{
     id: '152',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What is Response time?',
  option_one: 'the total time taken from the submission time till the completion time',
  option_two: 'the total time taken from the submission time till the first response is produced',
  option_three: 'the total time taken from submission time till the response is output',
  option_four: 'none of the mentioned',
  answer: 'B',
  explanation: ''
  },],
  mcq153: [{
     id: '153',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Round robin scheduling falls under the category of ____________',
  option_one: 'Non-preemptive scheduling',
  option_two: 'Preemptive scheduling',
  option_three: 'Both A and B',
  option_four: 'None of the mentioned',
  answer: 'B',
  explanation: ''
  },],
  mcq154: [{
     id: '154',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'With round robin scheduling algorithm in a time shared system ____________',
  option_one: ' using very large time slices converts it into First come First served scheduling algorithm',
  option_two: ' using very small time slices converts it into First come First served scheduling algorithm',
  option_three: 'using extremely small time slices increases performance',
  option_four: 'using very small time slices converts it into Shortest Job First algorithm',
  answer: 'A',
  explanation: ''
  },],
  mcq155: [{
     id: '155',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Complex scheduling algorithms ____________',
  option_one: 'are very appropriate for very large computers',
  option_two: 'use minimal resources',
  option_three: 'use many resources',
  option_four: 'all of the mentioned',
  answer: 'A',
  explanation: ''
  },],
  mcq156: [{
     id: '156',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What is FIFO algorithm?',
  option_one: 'first executes the job that came in last in the queue',
  option_two: 'first executes the job that came in first in the queue',
  option_three: 'first executes the job that needs minimal processor',
  option_four: 'first executes the job that has maximum processor needs',
  answer: 'B',
  explanation: ''
  },],
  mcq157: [{
     id: '157',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: ' The strategy of making processes that are logically runnable to be temporarily suspended is called ____________',
  option_one: 'Non-preemptive scheduling',
  option_two: 'preemptive scheduling',
  option_three: 'Shortest job first',
  option_four: 'First come First served',
  answer: 'B',
  explanation: ''
  },],
  mcq158: [{
     id: '158',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'What is Scheduling?',
  option_one: 'allowing a job to use the processor',
  option_two: 'making proper use of processor',
  option_three: 'Both A and B',
  option_four: 'None of the mentioned',
  answer: 'A',
  explanation: ''
  },],
  mcq159: [{
     id: '159',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'There are 10 different processes running on a workstation. Idle processes are waiting for an input event in the input queue. Busy processes are scheduled with the Round-Robin time sharing method. Which out of the following quantum times is the best value for small response times, if the processes have a short runtime, e.g. less than 10ms?',
  option_one: 'tQ = 15ms',
  option_two: 'tQ = 40ms',
  option_three: 'tQ = 45ms',
  option_four: 'tQ = 50ms',
  answer: 'A',
  explanation: ''
  },],
  mcq160: [{
     id: '160',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Orders are processed in the sequence they arrive if _______ rule sequences the jobs.',
  option_one: 'earliest due date',
  option_two: 'slack time remaining',
  option_three: 'first come, first served',
  option_four: 'critical ratio',
  answer: 'C',
  explanation: ''
  },],
  mcq161: [{
     id: '161',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Which of the following algorithms tends to minimize the process flow time?',
  option_one: 'First come First served',
  option_two: 'Shortest Job First',
  option_three: 'Earliest Deadline First',
  option_four: 'Longest Job First',
  answer: 'B',
  explanation: ''
  },],
  mcq162: [{
     id: '162',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Under multiprogramming, turnaround time for short jobs is usually ________ and that for long jobs is slightly ___________',
  option_one: 'Lengthened; Shortened',
  option_two: 'Shortened; Shortened',
  option_three: 'Shortened; Lengthened',
  option_four: 'Shortened; Unchanged',
  answer: 'C',
  explanation: ''
  },],
  mcq163: [{
     id: '163',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Which of the following statements are true? <br> <ol> <li> Shortest remaining time first scheduling may cause starvation <li> Premptive scheduling may cause staration <li> Round robin is better then FCFS in terms of response time',
  option_one: 'I',
  option_two: 'I and III only',
  option_three: 'II and III only',
  option_four: 'I, II and III',
  answer: 'D',
  explanation: ' I) Shortest remaining time first scheduling is a preemptive version of shortest job scheduling. It may cause starvation as shorter processes may keep coming and a long CPU burst process never gets CPU. II) Preemption may cause starvation. If priority based scheduling with preemption is used, then a low priority process may never get CPU. III) Round Robin Scheduling improves response time as all processes get CPU after a specified time.'
  },],
  mcq164: [{
     id: '164',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'Which is the most optimal scheduling algorithm?',
  option_one: 'FCFS - First comse First served',
  option_two: ' SJF – Shortest Job First',
  option_three: 'RR – Round Robin',
  option_four: 'Non-premptive scheduling',
  answer: 'B',
  explanation: ''
  },],

  mcq165: [{
     id: '165',
  subject_name: 'OS',
  chapter_name: 'CPU Scheduling',
  question: 'The real difficulty with SJF in short term scheduling is ____________',
  option_one: ' it is too good an algorithm',
  option_two: 'knowing the length of the next CPU request',
  option_three: 'it is too complex to understand',
  option_four: 'none of the mentioned',
  answer: 'B',
  explanation: ''
  },],

  mcq166: [{
    id: '166',
 subject_name: 'OS',
 chapter_name: 'CPU Scheduling',
 question: 'Consider the following set of processes, the length of the CPU burst time given in milliseconds. Assuming the above process being scheduled with the SJF scheduling algorithm. The waiting time for p1 is 3ms<table> <tr> <td>Process</td><td>Burst time</td><tr> <td>p1</td><td>6</td> </tr> <tr> <td>p2</td><td>8</td> </tr><tr> <td>p3</td><td>7</td> </tr><tr> <td>p4</td><td>3</td> </tr></tr> </table>',
 option_one: '3 ms',
 option_two: '0 ms',
 option_three: '16 ms',
 option_four: '9 ms',
 answer: 'A',
 explanation: ''
 },],

 mcq167: [{
  id: '167',
subject_name: 'OS',
chapter_name: 'CPU Scheduling',
question: ' Preemptive Shortest Job First scheduling is sometimes called ____________',
option_one: 'Fast SJF scheduling',
option_two: 'EDF scheduling – Earliest Deadline First',
option_three: 'HRRN scheduling – Highest Response Ratio Next',
option_four: 'SRTN scheduling – Shortest Remaining Time Next',
answer: 'D',
explanation: ''
},],

mcq168: [{
  id: '168',
subject_name: 'OS',
chapter_name: 'CPU Scheduling',
question: 'An SJF algorithm is simply a priority algorithm where the priority is ____________',
option_one: 'the predicted next CPU burst',
option_two: 'the inverse of the predicted next CPU burst',
option_three: 'the current CPU burst',
option_four: 'anything the user wants',
answer: 'A',
explanation: ''
},],
mcq169: [{
  id: '169',
subject_name: 'OS',
chapter_name: 'CPU Scheduling',
question: ' Choose one of the disadvantages of the priority scheduling algorithm?',
option_one: 'it schedules in a very complex manner',
option_two: 'its scheduling takes up a lot of time',
option_three: 'it can lead to some low priority process waiting indefinitely for the CPU',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],
mcq170: [{
  id: '170',
subject_name: 'OS',
chapter_name: 'CPU Scheduling',
question: 'What is ‘Aging’?',
option_one: 'keeping track of cache contents',
option_two: 'keeping track of what pages are currently residing in memory',
option_three: ' keeping track of how many times a given page is referenced',
option_four: ' increasing the priority of jobs to ensure termination in a finite time',
answer: 'D',
explanation: ''
},],
mcq171: [{
  id: '171',
subject_name: 'OS',
chapter_name: 'CPU Scheduling',
question: ' A solution to the problem of indefinite blockage of low – priority processes is',
option_one: 'Starvation',
option_two: 'Wait queue',
option_three: 'Ready queue',
option_four: 'Aging',
answer: 'D',
explanation: ''
},],
mcq172: [{
  id: '172',
subject_name: 'OS',
chapter_name: 'CPU Scheduling',
question: 'Which of the following scheduling algorithms gives minimum average waiting time?',
option_one: 'FCFS',
option_two: 'SJF',
option_three: 'Round - robin',
option_four: 'Priority',
answer: 'B',
explanation: ''
},],
mcq173: [{
  id: '173',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Concurrent access to shared data may result in ____________',
option_one: 'data consistency',
option_two: 'data insecurity',
option_three: 'data inconsistency',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],

mcq174: [{
   id: '174',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A situation where several processes access and manipulate the same data concurrently and the outcome of the execution depends on the particular order in which access takes place is called ____________',
option_one: 'data consistency',
option_two: 'race condition',
option_three: 'aging',
option_four: 'starvation',
answer: 'B',
explanation: ''
},],

mcq175: [{
   id: '175',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The segment of code in which the process may change common variables, update tables, write into files is known as ____________',
option_one: 'program',
option_two: 'critical section',
option_three: 'non - critical section',
option_four: 'synchronizing',
answer: 'B',
explanation: ''
},],

mcq176: [{
   id: '176',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' Which of the following conditions must be satisfied to solve the critical section problem?',
option_one: 'Mutual Exclusion',
option_two: 'Progress',
option_three: 'Bounded Waiting',
option_four: 'All of the mentioned',
answer: 'D',
explanation: ''
},],

mcq177: [{
   id: '177',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Mutual exclusion implies that ____________',
option_one: 'if a process is executing in its critical section, then no other process must be executing in their critical sections',
option_two: ' if a process is executing in its critical section, then other processes must be executing in their critical sections',
option_three: 'if a process is executing in its critical section, then all the resources of the system must be blocked until it finishes execution',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],

mcq178: [{
   id: '178',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Bounded waiting implies that there exists a bound on the number of times a process is allowed to enter its critical section ____________',
option_one: 'after a process has made a request to enter its critical section and before the request is granted',
option_two: 'when another process is in its critical section',
option_three: 'before a process has made a request to enter its critical section',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq179: [{
   id: '179',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A minimum of _____ variable(s) is/are required to be shared between processes to solve the critical section problem.',
option_one: 'one',
option_two: 'two',
option_three: 'three',
option_four: 'four',
answer: 'B',
explanation: 'It uses semaphore which worked on 2 variables.'
},],
mcqx180: [{
   id: '180',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'In the bakery algorithm to solve the critical section problem ____________',
option_one: 'each process is put into a queue and picked up in an ordered manner',
option_two: 'each process receives a number (may or may not be unique) and the one with the lowest number is served next',
option_three: 'each process gets a unique number and the one with the highest number is served next',
option_four: 'each process gets a unique number and the one with the lowest number is served next',
answer: 'B',
explanation: ''
},],

mcq181: [{
   id: '181',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'An un-interruptible unit is known as ____________',
option_one: 'single',
option_two: 'atomic',
option_three: 'static',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq182: [{
   id: '182',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'TestAndSet instruction is executed ____________',
option_one: 'after a particular process',
option_two: 'periodically',
option_three: 'atomically',
option_four: 'none of the mentioned',
answer: 'C',
explanation: 'the test-and-set instruction is an instruction used to write (set) 1 to a memory location and return its old value as a single atomic (i.e., non-interruptible) operation. The caller can then "test" the result to see if the state was changed by the call.'
},],

mcq183: [{
   id: '183',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Semaphore is a/an _______ to solve the critical section problem.',
option_one: 'hardware for a system',
option_two: 'special program for a system',
option_three: 'integer variable',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],

mcq184: [{
   id: '184',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What are the two atomic operations permissible on semaphores?',
option_one: 'wait',
option_two: 'stop',
option_three: 'hold',
option_four: 'None of the mentioned',
answer: 'A',
explanation: 'Wait and signal are the atomic operation possible on semaphore.'
},],

mcq185: [{
   id: '185',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What are Spinlocks?',
option_one: 'CPU cycles wasting locks over critical sections of programs',
option_two: 'Locks that avoid time wastage in context switches',
option_three: 'Locks that work better on multiprocessor systems',
option_four: 'All of the mentioned',
answer: 'D',
explanation: ''
},],
mcq186: [{
   id: '186',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What is the main disadvantage of spinlocks?',
option_one: 'they are not sufficient for many process',
option_two: ' they require busy waiting',
option_three: 'they are unreliable sometimes',
option_four: 'they are too complex for programmers',
answer: 'B',
explanation: ''
},],

mcq187: [{
   id: '187',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The wait operation of the semaphore basically works on the basic _______ system call.',
option_one: 'stop()',
option_two: 'block()',
option_three: 'hold()',
option_four: 'wait()',
answer: 'B',
explanation: ''
},],

mcq188: [{
   id: '188',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The signal operation of the semaphore basically works on the basic _______ system call.',
option_one: 'continue()',
option_two: 'wakeup()',
option_three: 'getup()',
option_four: 'start()',
answer: 'B',
explanation: ''
},],
mcq189: [{
   id: '189',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' If the semaphore value is negative ____________',
option_one: 'its magnitude is the number of processes waiting on that semaphore',
option_two: 'it is invalid',
option_three: ' no operation can be further performed on it until the signal operation is performed on it',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq190: [{
   id: '190',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' The code that changes the value of the semaphore is ____________',
option_one: 'remainder section code',
option_two: 'non - critical section code',
option_three: 'critical section code',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],
mcq191: [{
   id: '191',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The following program consists of 3 concurrent processes and 3 binary semaphores. The semaphores are initialized as S0 = 1, S1 = 0, S2 = 0. <br> <img src="./images/semaphore.png"> <br> How many times will P0 print ‘0’?',
option_one: 'At least twice',
option_two: 'Exactly twice',
option_three: 'Exactly thrice',
option_four: 'Exactly once',
answer: 'A',
explanation: '<img src="images/atleast_two.png">'
},],
mcq192: [{
   id: '192',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Each process Pi, i = 0,1,2,3,……,9 is coded as follows.<br> <img src="images/mutex.png"> <br>The code for P10 is identical except that it uses V(mutex) instead of P(mutex). What is the largest number of processes that can be inside the critical section at any moment (the mutex being initialized to 1)?',
option_one: '1',
option_two: '2',
option_three: '3',
option_four: 'None of the mentioned',
answer: 'C',
explanation: 'Any one of the 9 processes can get into critical section after executing P(mutex) which decrements the mutex value to 0. At this time P10 can enter critical section by incrementing the value to 1. Now any of the 9 processes can enter the critical section by again decrementing the mutex value to 0. None of the remaining processes can get into their critical sections.'
},],
mcq193: [{
   id: '193',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Two processes, P1 and P2, need to access a critical section of code. Consider the following synchronization construct used by the processes. <br> <img src="images/critical_section.png"> <br>Here, w1 and w2 have shared variables, which are initialized to false. Which one of the following statements is TRUE about the above construct?',
option_one: 'It does not ensure mutual exclusion',
option_two: 'It does not ensure bounded waiting',
option_three: 'It requires that processes enter the critical section in strict alternation',
option_four: 'It does not prevent deadlocks but ensures mutual exclusion',
answer: 'D',
explanation: ''
},],
mcq194: [{
   id: '194',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What will happen if a non-recursive mutex is locked more than once?',
option_one: 'starvation',
option_two: 'Deadlock',
option_three: 'Aging',
option_four: 'Signaling',
answer: 'B',
explanation: 'If a thread which had already locked a mutex, tries to lock the mutex again, it will enter into the waiting list of that mutex, which results in a deadlock. It is because no other thread can unlock the mutex.'
},],
mcq195: [{
   id: '195',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What is a semaphore?',
option_one: 'is a binary mutex',
option_two: 'must be accessed from only one process',
option_three: 'can be accessed from multiple processes',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],
mcq196: [{
   id: '196',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What are the two kinds of semaphores?',
option_one: 'mutex & counting',
option_two: 'binary & counting',
option_three: 'counting & decimal',
option_four: 'decimal & binary',
answer: 'B',
explanation: ''
},],
mcq197: [{
   id: '197',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What is a mutex?',
option_one: 'is a binary mutex',
option_two: 'must be accessed from only one process',
option_three: 'can be accessed from multiple processes',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq198: [{
   id: '198',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' At a particular time of computation the value of a counting semaphore is 7.Then 20 P operations and 15 V operations were completed on this semaphore. The resulting value of the semaphore is? (GATE 1987)',
option_one: '42',
option_two: '2',
option_three: '7',
option_four: '12',
answer: 'B',
explanation: 'P represents Wait and V represents Signal. P operation will decrease the value by 1 every time and V operation will increase the value by 1 every time.7-20+15=2'
},],
mcq199: [{
   id: '199',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A binary semaphore is a semaphore with integer values ____________',
option_one: '1',
option_two: '-1',
option_three: '0.8',
option_four: '0.5',
answer: 'A',
explanation: ''
},],
mcq200: [{
   id: '200',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' The following pair of processes share a common variable X.<br> <img src="images/common_variable.png"> <br> X is set to 5 before either process begins execution. As usual, statements within a process are executed sequentially, but statements in process A may execute in any order with respect to statements in process B. <br>How many different values of X are possible after both processes finish executing?',
option_one: 'two',
option_two: 'three',
option_three: 'four',
option_four: 'eight',
answer: 'C',
explanation: 'Here are the possible ways in which statements from A and B can be interleaved. A1 A2 B1 B2: X = 11, A1 B1 A2 B2: X = 6, A1 B1 B2 A2: X = 10, B1 A1 B2 A2: X = 10,B1 A1 A2 B2: X = 6,B1 B2 A1 A2: X = 12.'
},],
mcq201: [{
   id: '201',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The program follows to use a shared binary semaphore T. <br> <img src="images/binary_semaphore.png"> <br>T is set to 0 before either process begins execution and, as before, X is set to 5.Now, how many different values of X are possible after both processes finish executing?',
option_one: 'one',
option_two: 'two',
option_three: 'three',
option_four: 'four',
answer: 'A',
explanation: 'The semaphore T ensures that all the statements from A finish execution before B begins. So now there is only one way in which statements from A and B can be interleaved: A1 A2 B1 B2: X = 11.'
},],
mcq202: [{
   id: '202',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' Semaphores are mostly used to implement ____________',
option_one: 'System calls',
option_two: 'IPC mechanisms',
option_three: 'System protection',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq203: [{
   id: '203',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Spinlocks are intended to provide __________ only.',
option_one: 'Mutual Exclusion',
option_two: 'Bounded Waiting',
option_three: 'Aging',
option_four: 'Progress',
answer: 'B',
explanation: ''
},],
mcq204: [{
   id: '204',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' The bounded buffer problem is also known as ____________',
option_one: 'Readers - Writers problem',
option_two: 'Dining - Philosophers problem',
option_three: 'Producer - Consumer problem',
option_four: 'None of the mentioned',
answer: 'C',
explanation: ''
},],
mcq205: [{
  id: '205',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'In the bounded buffer problem, there are the empty and full semaphores that ____________',
option_one: 'count the number of empty and full buffers',
option_two: 'count the number of empty and full memory spaces',
option_three: 'count the number of empty and full queues',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq206: [{
  id: '206',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'In the bounded buffer problem ____________',
option_one: ' there is only one buffer',
option_two: 'there are n buffers ( n being greater than one but finite)',
option_three: 'there are infinite buffers',
option_four: 'the buffer size is bounded',
answer: 'B',
explanation: ''
},],
mcq207: [{
  id: '207',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'To ensure difficulties do not arise in the readers – writers problem _______ are given exclusive access to the shared object.',
option_one: 'readers',
option_two: 'writers',
option_three: 'readers and writers',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq208: [{
  id: '208',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The dining - philosophers problem will occur in case of ____________',
option_one: '5 philosophers and 5 chopsticks',
option_two: '4 philosophers and 5 chopsticks',
option_three: '3 philosophers and 5 chopsticks',
option_four: '6 philosophers and 5 chopsticks',
answer: 'A',
explanation: ''
},],
mcq209: [{
  id: '209',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A deadlock free solution to the dining philosophers problem ____________',
option_one: 'necessarily eliminates the possibility of starvation',
option_two: 'does not necessarily eliminate the possibility of starvation',
option_three: 'eliminates any possibility of any kind of problem further',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq210: [{
  id: '210',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'All processes share a semaphore variable mutex, initialized to 1. Each process must execute wait(mutex) before entering the critical section and signal(mutex) afterward. <br>Suppose a process executes in the following manner.<br><img src="images/signal_mutux.png"> <br> In this situation',
option_one: 'a deadlock will occur',
option_two: 'processes will starve to enter critical section',
option_three: 'several processes maybe executing in their critical section',
option_four: 'all of the mentioned',
answer: 'C',
explanation: ''
},],
mcq211: [{
  id: '211',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'All processes share a semaphore variable mutex, initialized to 1. Each process must execute wait(mutex) before entering the critical section and signal(mutex) afterward.Suppose a process executes in the following manner.<br> <img src="images/wait_mutux.png">',
option_one: 'a deadlock will occur',
option_two: 'processes will starve to enter critical section',
option_three: 'several processes maybe executing in their critical section',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq212: [{
  id: '212',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Consider the methods used by processes P1 and P2 for accessing their critical sections whenever needed, as given below. The initial values of shared boolean variables S1 and S2 are randomly assigned. (GATE 2010) <br> <img src="images/mutual_progress.png"> <br>Which of the following statements describes properties achieved?',
option_one: 'Mutual exclusion but not progress',
option_two: 'Progress but not mutual exclusion',
option_three: 'Neither mutual exclusion nor progress',
option_four: 'Both mutual exclusion and progress',
answer: 'D',
explanation: ''
},],
mcq213: [{
   id: '213',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A monitor is a type of ____________',
option_one: 'semaphore',
option_two: 'low level synchronization construct',
option_three: 'high level synchronization construct',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],
mcq214: [{
  id: '214',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A monitor is characterized by ____________',
option_one: 'set of programmer defined operators',
option_two: 'an identifier',
option_three: 'the number of variables in it',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq215: [{
  id: '215',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A procedure defined within a ________ can access only those variables declared locally within the _______ and its formal parameters.',
option_one: 'process, semaphore',
option_two: 'process, monitor',
option_three: 'semaphore, semaphore',
option_four: 'monitor, monitor',
answer: 'D',
explanation: ''
},],
mcq216: [{
  id: '216',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The monitor construct ensures that ____________',
option_one: 'only one process can be active at a time within the monitor',
option_two: 'n number of processes can be active at a time within the monitor (n being greater than 1)',
option_three: 'the queue has only one process in it at a time',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq217: [{
  id: '217',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'What are the operations that can be invoked on a condition variable?',
option_one: 'wait & signal',
option_two: 'hold & wait',
option_three: 'signal & hold',
option_four: 'continue & signal',
answer: 'A',
explanation: ''
},],
mcq218: [{
  id: '218',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: ' Which is the process of invoking the wait operation?',
option_one: 'suspended until another process invokes the signal operation',
option_two: ' waiting for another process to complete before it can itself call the signal operation',
option_three: 'stopped until the next process in the queue finishes execution',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq219: [{
  id: '219',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'If no process is suspended, the signal operation ____________',
option_one: 'puts the system into a deadlock state',
option_two: 'suspends some default process execution',
option_three: 'nothing happens',
option_four: 'the output is unpredictable',
answer: 'C',
explanation: ''
},],
mcq220: [{
   id: '220',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A collection of instructions that performs a single logical function is called ____________',
option_one: 'transaction',
option_two: 'operation',
option_three: 'function',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq221: [{
   id: '221',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A terminated transaction that has completed its execution successfully is ____________ otherwise it is __________',
option_one: 'committed, destroyed',
option_two: 'aborted, destroyed',
option_three: 'committed, aborted',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],
mcq222: [{
  id: '222',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The state of the data accessed by an aborted transaction must be restored to what it was just before the transaction started executing. This restoration is known as ________ of transaction.',
option_one: 'safety',
option_two: 'protection',
option_three: 'roll - back',
option_four: 'revert - back',
answer: 'C',
explanation: ''
},],
mcq223: [{
  id: '223',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Write ahead logging is a way ___________',
option_one: 'to ensure atomicity',
option_two: 'to keep data consistent',
option_three: 'that records data on stable storage',
option_four: 'all of the mentioned',
answer: 'D',
explanation: ''
},],
mcq224: [{
  id: '224',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'In the write ahead logging a _____________ is maintained.',
option_one: 'a memory',
option_two: 'a system',
option_three: 'a disk',
option_four: 'a log record',
answer: 'D',
explanation: ''
},],
mcq225: [{
  id: '225',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'An actual update is not allowed to a data item ____________',
option_one: 'before the corresponding log record is written out to stable storage',
option_two: 'after the corresponding log record is written out to stable storage',
option_three: 'until the whole log record has been checked for inconsistencies',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq226: [{
  id: '226',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The undo and redo operations must be _________ to guarantee correct behaviour, even if a failure occurs during recovery process.',
option_one: 'idempotent',
option_two: 'easy',
option_three: 'protected',
option_four: 'protected',
answer: 'A',
explanation: 'Idempotence, in programming and mathematics, is a property of some operations such that no matter how many times you execute them, you achieve the same result'
},],
mcq227: [{
  id: '227',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The system periodically performs checkpoints that consists of the following operation(s) ____________',
option_one: 'Putting all the log records currently in main memory onto stable storage',
option_two: 'putting all modified data residing in main memory onto stable storage',
option_three: 'putting a log record onto stable storage',
option_four: 'all of the mentioned',
answer: 'D',
explanation: ''
},],
mcq228: [{
  id: '228',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Consider a transaction T1 that committed prior to checkpoint. The <T1 commits> record appears in the log before the <checkpoint> record. Any modifications made by T1 must have been written to the stable storage either with the checkpoint or prior to it. Thus at recovery time ____________',
option_one: 'There is a need to perform an undo operation on T1',
option_two: 'There is a need to perform a redo operation on T1',
option_three: 'There is no need to perform an undo and redo operation on T1',
option_four: 'All of the mentioned',
answer: 'C',
explanation: ''
},],
mcq229: [{
  id: '229',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Serializable schedules are ones where ____________',
option_one: 'concurrent execution of transactions is equivalent to the transactions executed serially',
option_two: 'the transactions can be carried out one after the other',
option_three: 'a valid result occurs after execution transactions',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq230: [{
  id: '230',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'A locking protocol is one that ____________',
option_one: 'governs how locks are acquired',
option_two: 'governs how locks are released',
option_three: 'governs how locks are acquired and released',
option_four: 'none of the mentioned',
answer: 'C',
explanation: ''
},],
mcq231: [{
  id: '231',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The two phase locking protocol consists of ____________',
option_one: 'growing & shrinking phase',
option_two: 'shrinking & creation phase',
option_three: 'creation & growing phase',
option_four: 'destruction & creation phase',
answer: 'A',
explanation: ''
},],
mcq232: [{
  id: '232',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The growing phase is a phase in which?',
option_one: 'A transaction may obtain locks, but does not release any',
option_two: 'A transaction may obtain locks, and releases a few or all of them',
option_three: 'A transaction may release locks, but does not obtain any new locks',
option_four: 'A transaction may release locks, and does obtain new locks',
answer: 'A',
explanation: ''
},],
mcq233: [{
  id: '233',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'The shrinking phase is a phase in which?',
option_one: 'A transaction may obtain locks, but does not release any',
option_two: 'A transaction may obtain locks, and releases a few or all of them',
option_three: 'A transaction may release locks, but does not obtain any new locks',
option_four: 'A transaction may release locks, and does obtain new locks',
answer: 'C',
explanation: ''
},],
mcq234: [{
  id: '234',
subject_name: 'OS',
chapter_name: 'Process Synchronization',
question: 'Which of the following concurrency control protocols ensure both conflict serializability and freedom from deadlock? <ol> <li>2-phase locking <li> Timestamp ordering',
option_one: '! only',
option_two: 'II only',
option_three: 'Both A and B',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq235: [{
   id: '235',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'What is a reusable resource?',
option_one: 'that can be used by one process at a time and is not depleted by that use',
option_two: 'that can be used by more than one process at a time',
option_three: 'that can be shared between various threads',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq236: [{
   id: '236',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Which of the following condition is required for a deadlock to be possible?',
option_one: 'mutual exclusion',
option_two: ' process may hold allocated resources while awaiting assignment of other resources',
option_three: 'no resource can be forcibly removed from a process holding it',
option_four: 'all of the mentioned',
answer: 'D',
explanation: ''
},],
mcq237: [{
   id: '237',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A system is in the safe state if ____________',
option_one: ' the system can allocate resources to each process in some order and still avoid a deadlock',
option_two: 'there exist a safe sequence',
option_three: 'Both A and B',
option_four: 'None of the mentioned',
answer: 'A',
explanation: ''
},],
mcq238: [{
   id: '238',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The circular wait condition can be prevented by ____________',
option_one: 'defining a linear ordering of resource types',
option_two: 'using thread',
option_three: 'using pipes',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq239: [{
   id: '239',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Which one of the following is the deadlock avoidance algorithm?',
option_one: 'banker’s algorithm',
option_two: ' round-robin algorithm',
option_three: 'elevator algorithm',
option_four: 'karn’s algorithm',
answer: 'A',
explanation: ''
},],
mcq240: [{
   id: '240',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'What is the drawback of banker’s algorithm?',
option_one: 'in advance processes rarely know how much resource they will need',
option_two: 'the number of processes changes as time progresses',
option_three: 'resource once available can disappear',
option_four: 'all of the mentioned',
answer: 'D',
explanation: ''
},],
mcq241: [{
   id: '241',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A problem encountered in multitasking when a process is perpetually denied necessary resources is called ____________',
option_one: 'deadlock',
option_two: 'starvation',
option_three: 'inversion',
option_four: 'aging',
answer: 'B',
explanation: ''
},],
mcq242: [{
   id: '242',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Which one of the following is a visual ( mathematical ) way to determine the deadlock occurrence?',
option_one: 'resource allocation graph',
option_two: 'starvation graph',
option_three: 'inversion graph',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq243: [{
   id: '243',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'To avoid deadlock ____________',
option_one: 'there must be a fixed number of resources to allocate',
option_two: ' resource allocation must be done only once',
option_three: 'all deadlocked processes must be aborted',
option_four: 'inversion technique can be used',
answer: 'A',
explanation: ''
},],
mcq244: [{
   id: '244',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The number of resources requested by a process ____________',
option_one: 'must always be less than the total number of resources available in the system',
option_two: 'must always be equal to the total number of resources available in the system',
option_three: 'must not exceed the total number of resources available in the system',
option_four: 'must exceed the total number of resources available in the system',
answer: 'C',
explanation: ''
},],
mcq245: [{
   id: '245',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The request and release of resources are ___________',
option_one: 'command line statements',
option_two: 'interrupts',
option_three: 'system calls',
option_four: 'special programs',
answer: 'C',
explanation: ''
},],
mcq246: [{
   id: '246',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'What are Multithreaded programs?',
option_one: 'lesser prone to deadlocks',
option_two: 'more prone to deadlocks',
option_three: 'not at all prone to deadlocks',
option_four: 'none of the mentioned',
answer: 'B',
explanation: 'Multiple threads can compete for shared resources.'
},],
mcq247: [{
   id: '247',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'For a deadlock to arise, which of the following conditions must hold simultaneously?',
option_one: 'Mutual exclusion',
option_two: 'No preemption',
option_three: 'Hold and wait',
option_four: 'All of the mentioned',
answer: 'D',
explanation: ''
},],
mcq248: [{
   id: '248',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'For Mutual exclusion to prevail in the system ____________',
option_one: 'at least one resource must be held in a non sharable mode',
option_two: 'the processor must be a uniprocessor rather than a multiprocessor',
option_three: 'there must be at least one resource in a sharable mode',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq249: [{
   id: '249',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'For a Hold and wait condition to prevail ____________',
option_one: ' A process must be not be holding a resource, but waiting for one to be freed, and then request to acquire it',
option_two: 'A process must be holding at least one resource and waiting to acquire additional resources that are being held by other processes',
option_three: 'A process must hold at least one resource and not be waiting to acquire additional resources',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq250: [{
   id: '250',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Deadlock prevention is a set of methods ____________',
option_one: 'to ensure that at least one of the necessary conditions cannot hold',
option_two: 'to ensure that all of the necessary conditions do not hold',
option_three: 'to decide if the requested resources for a process have to be given or not',
option_four: ' to recover from a deadlock',
answer: 'A',
explanation: ''
},],
mcq251: [{
   id: '251',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'For non sharable resources like a printer, mutual exclusion ____________',
option_one: 'must exist',
option_two: 'must not exist',
option_three: 'may exist',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq252: [{
   id: '252',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: ' For sharable resources, mutual exclusion ____________',
option_one: 'is required',
option_two: ' is not required',
option_three: 'may be or may not be required',
option_four: 'none of the mentioned',
answer: 'B',
explanation: 'Mutual Exclusion - not required for sharable resources; must hold for non-sharable resources'
},],
mcq253: [{
   id: '253',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'To ensure that the hold and wait condition never occurs in the system, it must be ensured that ____________',
option_one: 'whenever a resource is requested by a process, it is not holding any other resources',
option_two: 'each process must request and be allocated all its resources before it begins its execution',
option_three: 'a process can request resources only when it has none',
option_four: 'all of the mentioned',
answer: 'D',
explanation: ''
},],
mcq254: [{
   id: '254',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The disadvantage of a process being allocated all its resources before beginning its execution is',
option_one: 'Low CPU utilization',
option_two: 'Low resource utilization',
option_three: 'Very high resource utilization',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq255: [{
   id: '255',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'To ensure no preemption, if a process is holding some resources and requests another resource that cannot be immediately allocated to it ____________',
option_one: 'then the process waits for the resources be allocated to it',
option_two: 'the process keeps sending requests until the resource is allocated to it',
option_three: ' the process resumes execution without the resource being allocated to it',
option_four: 'then all resources currently being held are preempted',
answer: 'D',
explanation: ''
},],
mcq256: [{
   id: '256',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'One way to ensure that the circular wait condition never holds is to ____________',
option_one: 'impose a total ordering of all resource types and to determine whether one precedes another in the ordering',
option_two: 'to never let a process acquire resources that are held by other processes',
option_three: ' to let a process wait for only one resource at a time',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq257: [{
   id: '257',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Each request requires that the system consider the _____________ to decide whether the current request can be satisfied or must wait to avoid a future possible deadlock.',
option_one: 'resources currently available',
option_two: 'processes that have previously been in the system',
option_three: 'resources currently allocated to each process',
option_four: 'future requests and releases of each process',
answer: 'A',
explanation: ''
},],
mcq258: [{
   id: '258',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Given a priori information about the ________ number of resources of each type that maybe requested for each process, it is possible to construct an algorithm that ensures that the system will never enter a deadlock state.',
option_one: 'minimum',
option_two: 'average',
option_three: 'maximum',
option_four: 'approximate',
answer: 'C',
explanation: ''
},],
mcq259: [{
   id: '259',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A state is safe, if ____________',
option_one: 'the system does not crash due to deadlock occurrence',
option_two: 'the system can allocate resources to each process in some order and still avoid a deadlock',
option_three: 'the state keeps the system protected and safe',
option_four: 'all of the mentioned',
answer: 'B',
explanation: ''
},],
mcq260: [{
   id: '260',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A system is in a safe state only if there exists a ____________',
option_one: 'safe allocation',
option_two: 'safe resource',
option_three: 'safe sequence',
option_four: 'all of the mentioned',
answer: 'C',
explanation: ''
},],
mcq261: [{
   id: '261',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'All unsafe states are ____________',
option_one: 'deadlocks',
option_two: 'not deadlocks',
option_three: 'fatal',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq262: [{
   id: '262',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A system has 12 magnetic tape drives and 3 processes : P0, P1, and P2. Process P0 requires 10 tape drives, P1 requires 4 and P2 requires 9 tape drives.<br> <img src="images/safe_sequence.png"><br> Which of the following sequence is a safe sequence? ',
option_one: 'P0, P1, P2',
option_two: 'P1, P2, P0',
option_three: 'P2, P0, P1',
option_four: 'P1, P0, P2',
answer: 'D',
explanation: 'As out of total 12, 9 are busy so only 3 are left we can only satisfiy the need of p1 we only need 2, it will give as 4 when it finish , so now total available are 5 we can give it to p0 which need 5, and then assign all to the last one.'
},],
mcq263: [{
   id: '263',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'If no cycle exists in the resource allocation graph ____________',
option_one: 'then the system will not be in a safe state',
option_two: 'then the system will be in a safe state',
option_three: 'Both A and B',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq264: [{
   id: '264',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Which method can be used for handling deadlock?',
option_one: 'use a protocol to prevent or avoid deadlocks',
option_two: 'allow the system to enter a deadlocked state, detect it, and recover.',
option_three: ' ignore the problem altogether and pretend that deadlocks never occur in the system',
option_four: 'All of the mentioned',
answer: 'D',
explanation: 'Most of the operating system windows and linus ignore deadlock and application program handle it.'
},],
mcq265: [{
   id: '265',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The resource allocation graph is not applicable to a resource allocation system ____________',
option_one: 'with multiple instances of each resource type',
option_two: 'with a single instance of each resource type',
option_three: 'single & multiple instances of each resource type',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq266: [{
   id: '266',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The Banker’s algorithm is _____________ than the resource allocation graph algorithm.',
option_one: 'less efficient',
option_two: 'more efficient',
option_three: 'equal',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq267: [{
   id: '267',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The data structures available in the Banker’s algorithm are ____________',
option_one: 'Available',
option_two: 'Need',
option_three: 'Allocation',
option_four: 'All of the mentioned',
answer: 'D',
explanation: ''
},],
mcq268: [{
   id: '268',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The content of the matrix Need is ____________',
option_one: 'Allocation - Available',
option_two: 'Max - Available',
option_three: 'Max - Allocation',
option_four: 'Allocation - Max',
answer: 'C',
explanation: '<img src="images/banker_allocation.png"> <br> <a href="https://www.cs.csustan.edu/~john/classes/previous_semesters/cs3750_operatingsys_i/2018_02_Spr/Examples/bankersAlgEg.html"> See Full Explaination </a>'
},],
mcq269: [{
   id: '269',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A system with 5 processes P0 through P4 and three resource types A, B, C have A with 10 instances, B with 5 instances, and C with 7 instances. At time t0, the following snapshot has been taken: <br>The sequence <P1, P3, P4, P2, P0> leads the system to ____________ <br> <img src="images/allocation_system.png">',
option_one: 'an unsafe state',
option_two: 'a safe state',
option_three: 'a protected state',
option_four: 'a deadlock',
answer: 'B',
explanation: ''
},],
mcq270: [{
   id: '270',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The wait-for graph is a deadlock detection algorithm that is applicable when ____________',
option_one: 'all resources have a single instance',
option_two: 'all resources have multiple instances',
option_three: 'all resources have a single 7 multiple instances',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq271: [{
   id: '271',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'An edge from process Pi to Pj in a wait for graph indicates that ____________',
option_one: 'Pi is waiting for Pj to release a resource that Pi needs',
option_two: 'Pi is waiting for Pj to leave the system',
option_three: 'Pj is waiting for Pi to release a resource that Pj needs',
option_four: 'Pj is waiting for Pi to leave the system',
answer: 'A',
explanation: ''
},],
mcq272: [{
   id: '272',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'If the wait for graph contains a cycle ____________',
option_one: 'then a deadlock does not exist',
option_two: 'then a deadlock exists',
option_three: 'then the system is in a safe state',
option_four: 'either deadlock exists or system is in a safe state',
answer: 'B',
explanation: ''
},],
mcq273: [{
   id: '273',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'If deadlocks occur frequently, the detection algorithm must be invoked ________',
option_one: 'rarely',
option_two: 'frequently',
option_three: 'Both A and B',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq274: [{
   id: '274',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'What is the disadvantage of invoking the detection algorithm for every request?',
option_one: 'overhead of the detection algorithm due to consumption of memory',
option_two: 'excessive time consumed in the request to be allocated memory',
option_three: 'considerable overhead in computation time',
option_four: 'all of the mentioned',
answer: 'C',
explanation: ''
},],
mcq275: [{
   id: '275',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A deadlock eventually cripples system throughput and will cause the CPU utilization to _____',
option_one: 'increase',
option_two: 'drop',
option_three: 'stay still',
option_four: 'None of the mentioned',
answer: 'B',
explanation: ''
},],
mcq276: [{
   id: '276',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Every time a request for allocation cannot be granted immediately, the detection algorithm is invoked. This will help identify ____________',
option_one: 'the set of processes that have been deadlocked',
option_two: 'the set of processes in the deadlock queue',
option_three: 'the specific process that caused the deadlock',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
mcq277: [{
   id: '277',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: ' A computer system has 6 tape drives, with ‘n’ processes competing for them. Each process may need 3 tape drives. The maximum value of ‘n’ for which the system is guaranteed to be deadlock free is?',
option_one: '2',
option_two: '3',
option_three: '4',
option_four: '1',
answer: 'A',
explanation: '<img src="images/deadlock_free.png">'
},],
mcq278: [{
   id: '278',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A system has 3 processes sharing 4 resources. If each process needs a maximum of 2 units then, deadlock ____________',
option_one: 'can never occur',
option_two: 'may occur',
option_three: 'has to occur',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq279: [{
   id: '279',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: ' ‘m’ processes share ‘n’ resources of the same type. The maximum need of each process doesn’t exceed ‘n’ and the sum of all their maximum needs is always less than m+n. In this setup, deadlock ____________',
option_one: 'can never occur',
option_two: 'may occur',
option_three: 'has to occur',
option_four: 'none of the mentioned',
answer: 'A',
explanation: ''
},],
mcq280: [{
   id: '280',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'A deadlock can be broken by ____________',
option_one: 'abort one or more processes to break the circular wait',
option_two: 'abort all the process in the system',
option_three: 'preempt all resources from all processes',
option_four: 'None of the mentioned',
answer: 'A',
explanation: ''
},],
mcq281: [{
   id: '281',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'The two ways of aborting processes and eliminating deadlocks are ____________',
option_one: 'Abort all deadlocked processes',
option_two: 'Abort all processes',
option_three: 'Abort one process at a time until the deadlock cycle is eliminated',
option_four: 'All of the mentioned',
answer: 'C',
explanation: ''
},],
mcq282: [{
   id: '282',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Those processes should be aborted on occurrence of a deadlock, the termination of which?',
option_one: 'is more time consuming',
option_two: 'incurs minimum cost',
option_three: 'safety is not hampered',
option_four: 'all of the mentioned',
answer: 'B',
explanation: ''
},],
mcq283: [{
   id: '283',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: ' The process to be aborted is chosen on the basis of the following factors?',
option_one: 'priority of the process',
option_two: 'process is interactive or batch',
option_three: 'how long the process has computed',
option_four: 'all of the mentioned',
answer: 'D',
explanation: ''
},],
mcq284: [{
   id: '284',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'Cost factors for process termination include ____________',
option_one: 'Number of resources the deadlock process is not holding',
option_two: 'CPU utilization at the time of deadlock',
option_three: 'Amount of time a deadlocked process has thus far consumed during its execution',
option_four: 'All of the mentioned',
answer: 'C',
explanation: ''
},],
mcq285: [{
   id: '285',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'If we preempt a resource from a process, the process cannot continue with its normal execution and it must be ____________',
option_one: 'aborted',
option_two: 'rolled back',
option_three: 'terminated',
option_four: 'queued',
answer: 'B',
explanation: ''
},],
mcq286: [{
   id: '286',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'To _______ to a safe state, the system needs to keep more information about the states of processes.',
option_one: 'abort the process',
option_two: 'roll back the process',
option_three: 'queue the process',
option_four: 'none of the mentioned',
answer: 'B',
explanation: ''
},],
mcq287: [{
   id: '287',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'If the resources are always preempted from the same process __________ can occur.',
option_one: 'deadlock',
option_two: 'system crash',
option_three: 'aging',
option_four: 'starvation',
answer: 'D',
explanation: ''
},],
mcq288: [{
   id: '288',
subject_name: 'OS',
chapter_name: 'Deadlock',
question: 'What is the solution to starvation?',
option_one: 'the number of rollbacks must be included in the cost factor',
option_two: 'the number of resources must be included in resource preemption',
option_three: 'resource preemption be done instead',
option_four: 'all of the mentioned',
answer: 'A',
explanation: ''
},],
};
